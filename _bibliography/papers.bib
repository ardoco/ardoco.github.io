@inproceedings{keim_tracelink_2021,
  abbr              = {ECSA},
  author            = {Keim, Jan and Schulz, Sophie and Fuch{\ss}, Dominik and Kocher, Claudius and Speit, Janek and Koziolek, Anne},
  title             = {Trace Link Recovery for Software Architecture Documentation},
  booktitle         = {Software Architecture},
  editor            = {Biffl, Stefan and Navarro, Elena and L{\"o}we, Welf	and Sirjani, Marjan	and Mirandola, Raffaela	and Weyns, Danny},
  year              = {2021},
  publisher         = {Springer International Publishing},
  address           = {Cham},
  pages             = {101--116},
  doi               = {10.1007/978-3-030-86044-8_7},
  isbn              = {978-3-030-86044-8},
  google_scholar_id = {IjCSPb-OGe4C},
  html              = {/c/ecsa21}
}

@inproceedings{fuchss_establishing_2023,
  abbr              = {ECSA},
  author            = {Fuch{\ss}, Dominik and Corallo, Sophie and Keim, Jan and Speit, Janek and Koziolek, Anne},
  editor            = {Batista, Thais and Bure{\v{s}}, Tom{\'a}{\v{s}} and Raibulet, Claudia and Muccini, Henry},
  title             = {Establishing a Benchmark Dataset for Traceability Link Recovery Between Software Architecture Documentation and Models},
  booktitle         = {Software Architecture. ECSA 2022 Tracks and Workshops},
  year              = {2023},
  publisher         = {Springer International Publishing},
  address           = {Cham},
  pages             = {455--464},
  doi               = {10.1007/978-3-031-36889-9_30},
  google_scholar_id = {eQOLeE2rZwMC}
}

@inproceedings{keim_detecting_2023,
  abbr              = {ICSA},
  author            = {Keim, Jan and Corallo, Sophie and Fuchß, Dominik and Koziolek, Anne},
  booktitle         = {2023 IEEE 20th International Conference on Software Architecture (ICSA)},
  title             = {Detecting Inconsistencies in Software Architecture Documentation Using Traceability Link Recovery},
  year              = {2023},
  volume            = {},
  number            = {},
  pages             = {141-152},
  doi               = {10.1109/ICSA56044.2023.00021},
  google_scholar_id = {WF5omc3nYNoC},
  html              = {/c/icsa23}
}

@inproceedings{keim_recovering_2024,
  abbr              = {ICSE},
  author            = {Keim, Jan and Corallo, Sophie and Fuch\ss{}, Dominik and Hey, Tobias and Telge, Tobias and Koziolek, Anne},
  title             = {Recovering Trace Links Between Software Documentation And Code},
  year              = {2024},
  isbn              = {9798400702174},
  publisher         = {Association for Computing Machinery},
  address           = {New York, NY, USA},
  url               = {https://doi.org/10.1145/3597503.3639130},
  doi               = {10.1145/3597503.3639130},
  abstract          = {Introduction Software development involves creating various artifacts at different levels of abstraction and establishing relationships between them is essential. Traceability link recovery (TLR) automates this process, enhancing software quality by aiding tasks like maintenance and evolution. However, automating TLR is challenging due to semantic gaps resulting from different levels of abstraction. While automated TLR approaches exist for requirements and code, architecture documentation lacks tailored solutions, hindering the preservation of architecture knowledge and design decisions. Methods This paper presents our approach TransArC for TLR between architecture documentation and code, using component-based architecture models as intermediate artifacts to bridge the semantic gap. We create transitive trace links by combining the existing approach ArDoCo for linking architecture documentation to models with our novel approach ArCoTL for linking architecture models to code.Results We evaluate our approaches with five open-source projects, comparing our results to baseline approaches. The model-to-code TLR approach achieves an average F1-score of 0.98, while the documentation-to-code TLR approach achieves a promising average F1-score of 0.82, significantly outperforming baselines. Conclusion Combining two specialized approaches with an intermediate artifact shows promise for bridging the semantic gap. In future research, we will explore further possibilities for such transitive approaches.},
  booktitle         = {Proceedings of the IEEE/ACM 46th International Conference on Software Engineering},
  articleno         = {215},
  numpages          = {13},
  location          = {Lisbon, Portugal},
  series            = {ICSE '24},
  selected          = {true},
  google_scholar_id = {UebtZRa9Y70C},
  html              = {/c/icse24}
}

@incollection{keim_detecting_2024,
  author    = {Keim, Jan and Corallo, Sophie and Fuchß, Dominik and Koziolek, Anne},
  title     = {Detecting Inconsistencies in Software Architecture Documentation Using Traceability Link Recovery},
  year      = 2024,
  doi       = {10.18420/sw2024_37},
  booktitle = {Software Engineering 2024 (SE 2024)},
  publisher = {Gesellschaft für Informatik e.V.},
  address   = {Bonn},
  pissn     = {1617-5468},
  isbn      = {978-3-88579-737-1},
  pages     = {119--120},
  html      = {/c/se24}
}

@inproceedings{fuchss_enabling_2025,
  abbr              = {ICSA},
  author            = {Fuchß, Dominik and Liu, Haoyu and Hey, Tobias and Keim, Jan and Koziolek, Anne},
  year              = {2025},
  month             = {04},
  title             = {{Enabling Architecture Traceability by LLM-based Architecture Component Name Extraction}},
  eventtitle        = {22nd IEEE International Conference on Software Architecture},
  eventtitleaddon   = {ICSA 2025},
  eventdate         = {2025-03-31/2025-04-04},
  venue             = {Odense, Denmark},
  booktitle         = {2025 IEEE 22nd International Conference on Software Architecture (ICSA)},
  publisher         = {{Institute of Electrical and Electronics Engineers (IEEE)}},
  keywords          = {Traceability Link Recovery, Large Language Models, Software Architecture, Model Extraction},
  selected          = {true},
  google_scholar_id = {5nxA0vEk-isC},
  doi               = {10.1109/ICSA65012.2025.00011},
  language          = {english},
  html              = {/c/icsa25}
}

@inproceedings{fuchss_lissa_2025,
  abbr              = {ICSE},
  author            = {Fuchß, Dominik and Hey, Tobias and Keim, Jan and Liu, Haoyu and Ewald, Niklas and Thirolf, Tobias and Koziolek, Anne},
  year              = {2025},
  month             = {05},
  title             = {{LiSSA: Toward Generic Traceability Link Recovery through Retrieval-Augmented Generation}},
  booktitle         = {Proceedings of the IEEE/ACM 47th International Conference on Software Engineering},
  publisher         = {{Institute of Electrical and Electronics Engineers (IEEE)}},
  doi               = {10.1109/ICSE55347.2025.00186},
  location          = {Ottawa, Canada},
  series            = {ICSE '25},
  google_scholar_id = {8k81kl-MbHgC},
  selected          = {true},
  html              = {/c/icse25}
}

@inproceedings{hey_requirements_2025,
  author            = {Hey, Tobias and Fuchß, Dominik and Keim, Jan and Koziolek, Anne},
  year              = {2025},
  month             = {04},
  title             = {{Requirements Traceability Link Recovery via Retrieval-Augmented Generation}},
  booktitle         = {{Requirements Engineering: Foundation for Software Quality}},
  publisher         = {Springer},
  address           = {Cham},
  google_scholar_id = {MXK_kJrjxJIC},
  doi               = {10.1007/978-3-031-88531-0_27},
  html              = {/c/refsq25}
}

@inproceedings{fuchss_beyond_2025,
  author    = {Fuch{\ss}, Dominik and Schwedt, Stefan and Keim, Jan and Hey, Tobias},
  booktitle = {2025 IEEE 33rd International Requirements Engineering Conference Workshops (REW)},
  title     = {{Beyond Retrieval: A Study of Using LLM Ensembles for Candidate Filtering in Requirements Traceability}},
  year      = {2025},
  volume    = {},
  number    = {},
  pages     = {5-12},
  doi       = {10.1109/REW66121.2025.00006},
  html      = {/c/aire25}
}
